{"version":3,"sources":["components/Home/home.js","components/FireBase/FireBaseContext.js","components/HighScroes/highScore.js","components/Game/Question/question.js","components/helpers/QuestionHelpers.js","components/Game/Progressbar/progressBar.js","components/Game/Hud/HUD.js","components/Game/SaveCoreform/saveScoreForm.js","components/Game/game.js","App.js","components/FireBase/FireBase.js","serviceWorker.js","index.js"],"names":["Home","className","to","FirebaseContext","React","createContext","useFirebase","useContext","HighScores","firebase","useState","scores","setScores","loading","setLoading","useEffect","once","snapshot","data","val","sortedScores","formatScoreData","firebaseScores","key","push","sort","score1","score2","score","slice","id","map","record","name","Question","question","changeQuestion","classToApply","setClassToApply","selectedAnswer","setSelectedAnswer","answering","setAnswering","dangerouslySetInnerHTML","__html","answerChoices","choice","index","onClick","answer","bonus","setTimeout","checkAnswer","LoadQuestion","a","amount","category","difficulty","type","url","fetch","res","json","results","convertQuestionFromAPI","console","error","rawQuestions","loadedQuestion","formattedQuestion","incorrect_answers","Math","floor","random","splice","correct_answer","ProgressBar","max","width","current","style","HUD","questionNumber","SaveScoreForm","scoreSaved","username","setUsername","log","onSubmit","e","preventDefault","placeholder","value","onChange","updateUsername","target","disabled","Game","history","questions","setQuestions","currentQuestion","setCurrentQuestion","setScore","setQuestionNumber","done","setDone","then","catch","useCallback","length","randomQuestionIndex","remainingQuestions","App","exact","path","component","HighScore","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","db","ref","app","initializeApp","this","database","Boolean","window","location","hostname","match","ReactDOM","render","Provider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qRAaeA,EAVF,WACT,OACI,yBAAKC,UAAU,aACX,wCACA,kBAAC,IAAD,CAAMC,GAAG,QAAQD,UAAU,OAA3B,cACA,kBAAC,IAAD,CAAMC,GAAG,aAAaD,UAAU,OAAhC,gB,OCNCE,EAAkBC,IAAMC,cAAc,MACtCC,EAAc,kBAAMC,qBAAWJ,ICA7B,SAASK,IACpB,IAAMC,EAAWH,IADgB,EAELI,mBAAS,IAFJ,mBAE1BC,EAF0B,KAElBC,EAFkB,OAGHF,oBAAS,GAHN,mBAG1BG,EAH0B,KAGjBC,EAHiB,KAKjCC,qBAAU,WACNN,EAASE,SAASK,KAAK,SAAS,SAACC,GAC7B,IAAMC,EAAOD,EAASE,MAChBC,EAAeC,EAAgBH,GACrCN,EAAUQ,GACVN,GAAW,QAEjB,CAACL,IAEH,IAAMY,EAAkB,SAACC,GACrB,IAAMX,EAAS,GAEf,IAAK,IAAIY,KAAOD,EAAgB,CAC5B,IAAMH,EAAMG,EAAeC,GAC3BJ,EAAG,IAAUI,EACbZ,EAAOa,KAAKL,GAGhB,OAAOR,EACFc,MAAK,SAACC,EAAQC,GAAT,OAAoBA,EAAOC,MAAQF,EAAOE,SAC/CC,MAAM,EAAG,KAGlB,OACI,oCACKhB,GAAW,yBAAKiB,GAAG,YAClBjB,GACE,oCACI,2CACA,yBAAKiB,GAAG,kBACHnB,EAAOoB,KAAI,SAACC,GAAD,OACR,wBAAIT,IAAKS,EAAOT,IAAKtB,UAAU,cAC1B+B,EAAOC,KADZ,MACqBD,EAAOJ,a,kBCpCzC,SAASM,EAAT,GAAiD,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,eAAkB,EAEnB1B,mBAAS,IAFU,mBAEpD2B,EAFoD,KAEtCC,EAFsC,OAGf5B,oBAAU,GAHK,mBAGpD6B,EAHoD,KAGpCC,EAHoC,OAIzB9B,oBAAS,GAJgB,mBAIpD+B,EAJoD,KAIzCC,EAJyC,KAuB3D,OACI,6BACI,wBAAIC,wBAAyB,CAACC,OAAQT,EAASA,YAE9CA,EAASU,cAAcd,KAAI,SAACe,EAAQC,GAAT,OACxB,yBACIxB,IAAKwB,EACL9C,UAAS,2BAAsBsC,IAAmBQ,GAClDV,GACAW,QAAS,kBA1BL,SAACT,GACjB,IAAIE,EAAJ,CAEAC,GAAa,GACbF,EAAkBD,GAElB,IAAMF,EAAeE,IAAmBJ,EAASc,OAAS,UAAY,YACtEX,EAAgBD,GAChB,IAAMa,EAAQX,IAAmBJ,EAASc,OAAS,GAAK,EAExDE,YAAW,WACPX,GAAmB,GACnBE,GAAa,GACbN,EAAec,KAChB,MAYwBE,CAAYL,KAE3B,uBAAG9C,UAAU,iBAAiB8C,EAAQ,GACtC,uBACE9C,UAAU,cACV0C,wBAAyB,CAACC,OAAQE,U,6BCzC3CO,EAAY,uCAAG,sDAAAC,EAAA,6DACOC,EADP,+BACgB,GACTC,EAFP,+BAEkB,EACXC,EAHP,+BAGoB,OACbC,EAJP,+BAIc,WAChCC,EALkB,6CAK0BJ,EAL1B,qBAK6CC,EAL7C,uBAKoEC,EALpE,iBAKuFC,GALvF,kBAQFE,MAAMD,GARJ,cAQdE,EARc,iBASIA,EAAIC,OATR,wBASbC,EATa,EASbA,QATa,kBAUbC,EAAuBD,IAVV,kCAapBE,QAAQC,MAAR,MAboB,0DAAH,qDAiBnBF,EAAyB,SAACG,GAC5B,OAAOA,EAAapC,KAAI,SAACqC,GACrB,IAAMC,EAAoB,CACtBlC,SAAUiC,EAAejC,SACzBU,cAAc,YAAKuB,EAAeE,oBAWtC,OARAD,EAAkBpB,OAASsB,KAAKC,MAAsB,EAAhBD,KAAKE,UAE3CJ,EAAkBxB,cAAc6B,OAC5BL,EAAkBpB,OAClB,EACAmB,EAAeO,gBAGZN,MC9BA,SAASO,EAAT,GAAsC,IAAhBC,EAAe,EAAfA,IAC3BC,EAD0C,EAAVC,QACfF,EAAO,IAE9B,OACI,yBAAK/C,GAAG,eACJ,yBAAKA,GAAG,kBAAkBkD,MAAO,CAAEF,MAAM,GAAD,OAAKA,EAAL,SCJrC,SAASG,EAAT,GAAuC,IAAzBrD,EAAwB,EAAxBA,MAAOsD,EAAiB,EAAjBA,eAChC,OACI,yBAAKpD,GAAG,OACJ,yBAAK7B,UAAU,OACX,uBAAGA,UAAU,cAAb,aAAqCiF,EAArC,OACA,wBAAIjF,UAAU,iBAAiB2B,GAC/B,kBAACgD,EAAD,CACIC,IAAK,GACLE,QAASG,KAGjB,yBAAKjF,UAAU,OACX,uBAAGA,UAAU,cAAb,SACA,wBAAIA,UAAU,iBAAiB2B,KCZhC,SAASuD,EAAT,GAA6C,IAArBvD,EAAoB,EAApBA,MAAOwD,EAAa,EAAbA,WAAa,EACvB1E,mBAAS,IADc,mBAChD2E,EADgD,KACtCC,EADsC,KAEjD7E,EAAWH,IACjB2D,QAAQsB,IAAI9E,GAoBZ,OACI,6BACI,4BAAKmB,GACL,0BAAM4D,SAhBQ,SAACC,GACnBA,EAAEC,iBACF,IAAM1D,EAAS,CACXC,KAAMoD,EACNzD,SAEJnB,EAASE,SAASa,KAAKQ,GAAQ,WAC3BiC,QAAQsB,IAAI,4BACZH,OAEJnB,QAAQsB,IAAIvD,KAOJ,2BACI0B,KAAK,OACLzB,KAAK,WACLH,GAAG,WACH6D,YAAY,OACZC,MAAOP,EACPQ,SA5BS,SAACJ,GACtB,IAAMK,EAAiBL,EAAEM,OAAOH,MAChCN,EAAYQ,MA4BJ,4BAAQpC,KAAK,SAASzD,UAAU,MAAM+F,UAAWX,GAAjD,SAEJ,kBAAC,IAAD,CAAMnF,GAAG,IAAID,UAAU,OAAvB,YCnCG,SAASgG,EAAT,GAA0B,IAAXC,EAAU,EAAVA,QAAU,EAEFxF,mBAAS,IAFP,mBAE7ByF,EAF6B,KAElBC,EAFkB,OAGU1F,mBAAS,MAHnB,mBAG7B2F,EAH6B,KAGZC,EAHY,OAIN5F,oBAAS,GAJH,mBAI7BG,EAJ6B,KAIpBC,EAJoB,OAKVJ,mBAAS,GALC,mBAK7BkB,EAL6B,KAKtB2E,EALsB,OAMQ7F,mBAAS,GANjB,mBAM7BwE,EAN6B,KAMbsB,EANa,OAOZ9F,oBAAS,GAPG,mBAO7B+F,EAP6B,KAOvBC,EAPuB,KASpC3F,qBAAU,WACNsC,IACKsD,KAAKP,GACLQ,OAAM,SAAAnB,GAAC,OAAIxB,QAAQC,MAAMuB,QAChC,IAGF,IAIMrD,EAAiByE,uBACnB,WAAgB,IAAf3D,EAAc,uDAAN,EACL,GAAyB,IAArBiD,EAAUW,OAEV,OADAJ,GAAQ,GACDH,EAAS3E,EAAQsB,GAG5B,IAAM6D,EAAsBxC,KAAKC,MAC7BD,KAAKE,SAAW0B,EAAUW,QAExBT,EAAkBF,EAAUY,GAC5BC,EAAkB,YAAOb,GAC/Ba,EAAmBtC,OAAOqC,EAAqB,GAE/CX,EAAaY,GACbV,EAAmBD,GACnBvF,GAAW,GACXyF,EAAS3E,EAAQsB,GACjBsD,EAAkBtB,EAAiB,KAEvC,CAACtD,EAAMsD,EAAeiB,EAAUC,EAAatF,EAAWwF,EAAmBE,IAS3E,OAPAzF,qBAAU,YACDsF,GAAmBF,EAAUW,QAC9B1E,MAGT,CAACiE,EAAiBF,EAAW/D,IAGxB,oCACKvB,IAAY4F,GAAQ,yBAAK3E,GAAG,YAE3BjB,IACD4F,GACDJ,GACI,6BACI,kBAACpB,EAAD,CACIrD,MAAOA,EACPsD,eAAgBA,IAEpB,kBAAChD,EAAD,CACIC,SAAUkE,EACVjE,eAAgBA,KAI3BqE,GAAS,kBAACtB,EAAD,CAAevD,MAAOA,EAAOwD,WAnDhC,WACfc,EAAQ1E,KAAK,S,iBCCNyF,MAbf,WACE,OACE,yBAAKhH,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOiH,OAAK,EAACC,KAAK,IAAIC,UAAWpH,IACjC,kBAAC,IAAD,CAAOmH,KAAK,QAAQC,UAAWnB,IAC/B,kBAAC,IAAD,CAAOkB,KAAK,aAAaC,UAAWC,O,yBCd1CC,G,MAAS,CACXC,OAAQC,0CACRC,WAAYD,mCACZE,YAAaF,0CACbG,UAAWH,mBACXI,cAAeJ,+BACfK,kBAAmBL,iBAaRM,EARX,aAAe,IAAD,gCAKdnH,OAAS,kBAAM,EAAKoH,GAAGC,IAAI,WAJvBC,IAAIC,cAAcZ,GAClBa,KAAKJ,GAAKE,IAAIG,YCJFC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACL,kBAACxI,EAAgByI,SAAjB,CAA0BhD,MAAO,IAAIkC,GACjC,kBAAC,EAAD,OAEJe,SAASC,eAAe,SDuHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtC,MAAK,SAAAuC,GACjCA,EAAaC,kB","file":"static/js/main.21ad04f3.chunk.js","sourcesContent":["import React from 'react'\nimport {Link} from \"react-router-dom\";\n\nconst Home = () => {\n    return(\n        <div className='container'>\n            <h1>Wise App</h1>\n            <Link to=\"/game\" className='btn'>Start Game</Link>\n            <Link to=\"/highScore\" className='btn'>High Score</Link>\n        </div>\n    )\n};\n\nexport default Home\n","import React, {useContext} from 'react'\n\nexport const FirebaseContext = React.createContext(null);\nexport const useFirebase = () => useContext(FirebaseContext)\n","import React, { useEffect, useState } from 'react';\nimport {useFirebase} from \"../FireBase/FireBaseContext\";\n\nexport default function HighScores() {\n    const firebase = useFirebase();\n    const [scores, setScores] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        firebase.scores().once('value', (snapshot) => {\n            const data = snapshot.val();\n            const sortedScores = formatScoreData(data);\n            setScores(sortedScores);\n            setLoading(false);\n        });\n    },[firebase]);\n\n    const formatScoreData = (firebaseScores) => {\n        const scores = [];\n\n        for (let key in firebaseScores) {\n            const val = firebaseScores[key];\n            val['key'] = key;\n            scores.push(val);\n        }\n\n        return scores\n            .sort((score1, score2) => score2.score - score1.score)\n            .slice(0, 10);\n    };\n\n    return (\n        <>\n            {loading && <div id=\"loader\"></div>}\n            {!loading && (\n                <>\n                    <h1>High Scores</h1>\n                    <div id=\"highScoresList\">\n                        {scores.map((record) => (\n                            <li key={record.key} className=\"high-score\">\n                                {record.name} - {record.score}\n                            </li>\n                        ))}\n                    </div>\n                </>\n            )}\n        </>\n    );\n}\n","import React, { useState } from \"react\";\n\nimport './question.css'\n\nexport default function Question({ question, changeQuestion }) {\n\n    const [classToApply, setClassToApply] = useState('');\n    const [selectedAnswer, setSelectedAnswer] = useState(-1);\n    const [answering, setAnswering] = useState(false);\n\n    const checkAnswer = (selectedAnswer) => {\n        if (answering) return;\n\n        setAnswering(true);\n        setSelectedAnswer(selectedAnswer);\n\n        const classToApply = selectedAnswer === question.answer ? 'correct' : 'incorrect';\n        setClassToApply(classToApply);\n        const bonus = selectedAnswer === question.answer ? 10 : 0;\n\n        setTimeout(() => {\n            setSelectedAnswer(-1);\n            setAnswering(false);\n            changeQuestion(bonus);\n        }, 1000);\n    };\n\n    return (\n        <div>\n            <h2 dangerouslySetInnerHTML={{__html: question.question}}/>\n\n            {question.answerChoices.map((choice, index) => (\n                <div\n                    key={index}\n                    className={`choice-container ${selectedAnswer === index &&\n                    classToApply}`}\n                    onClick={() => checkAnswer(index)}\n                >\n                    <p className=\"choice-prefix\">{index + 1}</p>\n                    <p\n                      className=\"choice-text\"\n                      dangerouslySetInnerHTML={{__html: choice}}/>\n                </div>\n            ))}\n        </div>\n    )\n}\n","export const LoadQuestion = async (\n                                   amount = 10,\n                                   category = 9,\n                                   difficulty = 'easy',\n                                   type = 'multiple') => {\n    const url = `https://opentdb.com/api.php?amount=${amount}&category=${category}&difficulty=${difficulty}&type=${type}`;\n\n    try {\n        const res = await fetch(url);\n        const {results} = await res.json();\n        return convertQuestionFromAPI(results)\n\n    } catch (e) {\n        console.error(e)\n    }\n}\n\nconst convertQuestionFromAPI = (rawQuestions) => {\n    return rawQuestions.map((loadedQuestion) => {\n        const formattedQuestion = {\n            question: loadedQuestion.question,\n            answerChoices: [...loadedQuestion.incorrect_answers]\n        };\n\n        formattedQuestion.answer = Math.floor(Math.random() * 4);\n\n        formattedQuestion.answerChoices.splice(\n            formattedQuestion.answer,\n            0,\n            loadedQuestion.correct_answer\n        );\n\n        return formattedQuestion;\n    });\n}\n","import React from 'react'\n\nexport default function ProgressBar({max, current}) {\n    const width = (current/max) * 100;\n\n    return(\n        <div id='progressBar'>\n            <div id=\"progressBarFull\" style={{ width: `${width}%` }}></div>\n        </div>\n    )\n}\n\n\n","import React from 'react'\nimport ProgressBar from \"../Progressbar/progressBar\";\n\nexport default function HUD({score, questionNumber}) {\n    return(\n        <div id=\"hud\">\n            <div className='hud'>\n                <p className=\"hub-prefix\">Question: {questionNumber}/10</p>\n                <h1 className=\"hub-main-text\">{score}</h1>\n                <ProgressBar\n                    max={10}\n                    current={questionNumber}\n                />\n            </div>\n            <div className='hud'>\n                <p className=\"hub-prefix\">Score</p>\n                <h1 className=\"hub-main-text\">{score}</h1>\n            </div>\n        </div>\n    )\n}\n","import React, {useState} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {useFirebase} from \"../../FireBase/FireBaseContext\";\n\nexport default function SaveScoreForm({score, scoreSaved}) {\n    const [username, setUsername] = useState('');\n    const firebase = useFirebase()\n    console.log(firebase)\n\n    const onUsernameChange = (e) => {\n        const updateUsername = e.target.value\n        setUsername(updateUsername)\n    }\n\n    const saveHighScore = (e) => {\n        e.preventDefault()\n        const record = {\n            name: username,\n            score\n        }\n        firebase.scores().push(record, () => {\n            console.log('Score save in FireBaseDB')\n            scoreSaved()\n        })\n        console.log(record)\n    }\n\n    return(\n        <div>\n            <h1>{score}</h1>\n            <form onSubmit={saveHighScore}>\n                <input\n                    type=\"text\"\n                    name=\"username\"\n                    id=\"username\"\n                    placeholder='name'\n                    value={username}\n                    onChange={onUsernameChange}\n                />\n                <button type=\"submit\" className='btn' disabled={!username}>Save</button>\n            </form>\n            <Link to='/' className='btn'>Go Home</Link>\n        </div>\n    )\n}\n","import React, {useCallback, useEffect, useState} from 'react';\nimport Question from \"./Question/question\";\nimport { LoadQuestion } from \"../helpers/QuestionHelpers\";\nimport HUD from \"./Hud/HUD\";\nimport SaveScoreForm from \"./SaveCoreform/saveScoreForm\";\n\nexport default function Game({history}) {\n\n    const [questions ,setQuestions] = useState([])\n    const [currentQuestion, setCurrentQuestion] = useState(null)\n    const [loading, setLoading] = useState(true)\n    const [score, setScore] = useState(0)\n    const [questionNumber, setQuestionNumber] = useState(0)\n    const [done, setDone] = useState(false)\n\n    useEffect(() => {\n        LoadQuestion()\n            .then(setQuestions)\n            .catch(e => console.error(e))\n    },[])\n\n\n    const scoreSaved = () => {\n        history.push('/')\n    }\n\n    const changeQuestion = useCallback(\n        (bonus = 0) => {\n            if (questions.length === 0) {\n                setDone(true);\n                return setScore(score + bonus);\n            }\n\n            const randomQuestionIndex = Math.floor(\n                Math.random() * questions.length\n            );\n            const currentQuestion = questions[randomQuestionIndex];\n            const remainingQuestions = [...questions];\n            remainingQuestions.splice(randomQuestionIndex, 1);\n\n            setQuestions(remainingQuestions);\n            setCurrentQuestion(currentQuestion);\n            setLoading(false);\n            setScore(score + bonus);\n            setQuestionNumber(questionNumber + 1);\n        },\n        [score,questionNumber,questions,setQuestions,setLoading,setCurrentQuestion,setQuestionNumber]);\n\n        useEffect(() => {\n            if (!currentQuestion && questions.length) {\n                changeQuestion()\n            }\n\n    }, [currentQuestion, questions, changeQuestion])\n\n        return (\n            <>\n                {loading && !done && <div id=\"loader\" />}\n\n                {!loading &&\n                !done &&\n                currentQuestion && (\n                    <div>\n                        <HUD\n                            score={score}\n                            questionNumber={questionNumber}\n                        />\n                        <Question\n                            question={currentQuestion}\n                            changeQuestion={changeQuestion}\n                        />\n                    </div>\n                )}\n                {done &&  <SaveScoreForm score={score} scoreSaved={scoreSaved}/>}\n            </>\n        );\n    }\n","import React from 'react';\n\nimport Home from \"./components/Home/home\";\nimport HighScore from \"./components/HighScroes/highScore\";\nimport Game from \"./components/Game/game\";\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\nimport './App.css';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Router>\n            <Route exact path='/' component={Home} />\n            <Route path='/game' component={Game} />\n            <Route path='/highScore' component={HighScore} />\n\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import app from 'firebase/app'\nimport 'firebase/database';\n\nconst config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n        this.db = app.database();\n    }\n\n    scores = () => this.db.ref('scores');\n}\n\nexport default Firebase;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Firebase from \"./components/FireBase/FireBase\";\nimport { FirebaseContext } from \"./components/FireBase/FireBaseContext\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n        <App />\n    </FirebaseContext.Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}